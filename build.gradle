// For those who want the bleeding edge
//file:noinspection GradlePackageUpdate
buildscript {
    ext.kotlin_version = '1.3.20'
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://jitpack.io'
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.github.johnrengelman.shadow"

version = "0.3"
group = "me.seeking"
archivesBaseName = "seeking"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    mappings = "stable_22"
    runDir = "run"
    makeObfSourceJar = false
}

mixin {
    defaultObfuscationEnv = "searge"
    add sourceSets.main, "mixins.seeking.refmap.json"
}

repositories {
    maven { url "https://jitpack.io" }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    mavenCentral()
    jcenter()
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    embed "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    exclude "META-INF/**"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    manifest.attributes(
            "MixinConfigs": 'mixins.seeking.json',
            "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
            "FMLCorePluginContainsFMLMod": 'me.seeking.mixin.inject.MixinLoader'
    )
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.jetbrains:annotations'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'

    classifier = ''
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}